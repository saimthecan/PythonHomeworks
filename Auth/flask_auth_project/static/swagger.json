{
    "swagger": "2.0",
    "info": {
      "description": "This is a sample server for a Flask JWT Authentication example.",
      "version": "1.0.0",
      "title": "Flask JWT Authentication Example"
    },
    "host": "127.0.0.1:5000",
    "basePath": "/",
    "tags": [
      {
        "name": "auth",
        "description": "Authentication related endpoints"
      }
    ],
    "paths": {
      "/login": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Logs user into the system",
          "description": "",
          "operationId": "loginUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be logged in",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input"
            },
            "401": {
              "description": "Invalid credentials"
            }
          }
        }
      },
      "/signup": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Creates a new user in the system",
          "description": "",
          "operationId": "createUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be created",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "400": {
              "description": "Invalid input or User already exists"
            }
          }
        }
      }
    }
  }
  